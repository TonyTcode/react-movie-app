{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/HomeHook.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["Header","className","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","image","title","text","style","background","SearchBar","state","value","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","props","callback","name","size","type","placeholder","onChange","this","Component","FourColGrid","children","header","loading","map","element","i","key","MovieThumb","movieId","movieName","clickable","pathname","proTypes","PropTypes","string","number","bool","LoadMoreBtn","onClick","Spinner","Home","useState","movies","isLoading","setIsLoading","isError","setIsError","fetchMovies","endpoint","a","params","URLSearchParams","get","prev","searchTerm","fetch","json","result","results","heroImage","currentPage","page","totalPages","total_pages","useEffect","sessionStorage","getItem","persistedState","JSON","parse","setItem","stringify","useFetchMovies","backdrop_path","original_title","overview","poster_path","id","Navigation","movie","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","Actor","actor","profile_path","character","Movie","actors","fetchItems","match","status_code","creditsEndpoint","creditsResult","crew","filter","member","job","cast","localStorage","console","log","location","runtime","NotFound","App","basename","Fragment","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95a72b73.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom'\nimport './Header.css';\n\nconst Header = () => (\n        <div className= \"rmdb-header\">\n            <div className= \"rmdb-header-content\">\n                <Link to=\"/\">\n                <img className= \"rmdb-logo\" src=\"./images/reactMovie_logo.png\" alt=\"rmdb-logo\" />\n                </Link>\n                <img className=\"rmdb-tmdb-logo\" src=\"./images/tmdb_logo.png\" alt=\"tmdb-logo\" />\n            </div>\n        </div>\n    )\n\n\nexport default Header;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b2dc1affb27b024e4bd237fb2d1e9b4d';\n\n\n//844dba0bfd8f3a4f3799f6130ef9e33\n\n//\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react';\nimport './HeroImage.css'\n\nconst HeroImage = ({ image, title, text }) => (\n        <div className=\"rmdb-heroimage\"\n        style={{\n            background:\n            `linear-gradient(to bottom, rgba(0,0,0,0)\n            39%,rgba(0,0,0,0)\n            41%, rgba(0,0,0,0.65)\n            100%),\n            url('${image}'), #1c1c1c`\n\n        }}\n    >\n         <div className=\"rmdb-heroimage-content\">\n            <div className=\"rmdb-heroimage-text\">\n                <h1>{title}</h1>\n                <p>{text}</p>\n            </div>\n            </div>\n        </div>\n    )\n\n\nexport default HeroImage;","import React, { Component }from 'react';\nimport FontAwesome from 'react-fontawesome'\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n    state = {\n        value: ''\n    }\n\n    timeout = null\n\n    doSearch = (event) => {\n        this.setState({ value: event.target.value})\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout( () => {\n            this.props.callback(this.state.value);\n        }, 500);\n    }\n\n    render() {\n        return (\n            <div className=\"rmdb-searchbar\">\n                <div className=\"rmdb-searchbar-content\">\n                    <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\n                    <input \n                        type=\"text\"\n                        className=\"rmdb-searchbar-input\"\n                        placeholder=\"Search\"\n                        onChange={this.doSearch}\n                        value={this.state.value}\n                        />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FourColGrid.css';\n\nconst FourColGrid = ({ children, header, loading }) => {\n\n    const renderElements = () => {\n        const gridElements = children.map( (element, i) => {\n            return (\n                <div key={i} className=\"rmdb-grid-element\">\n                    {element}\n                </div>\n            )\n        })\n        return gridElements;\n    }\n\n    return (\n        <div className=\"rmdb-grid\">\n           {header && !loading ? <h1>{header}</h1> : null}\n           <div className=\"rmdb-grid-content\">\n               {renderElements()}\n           </div>\n        </div>\n    )\n}\n\nFourColGrid.propTypes = {\n    header: PropTypes.string,\n    loading: PropTypes.bool\n\n}\n\nexport default FourColGrid;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './MovieThumb.css';\n\nconst MovieThumb = ({ image, movieId, movieName, clickable}) => (\n        <div className=\"rmdb-moviethumb\">\n            {clickable ? \n                <Link to={{ pathname: `/${movieId}`, movieName: `${movieName}`}}>\n                    <img className=\"clickable\" src={image} alt=\"moviethumb\" />\n                </Link>\n                :\n                <img src={image} alt=\"moviethumb\" />\n            }\n\n        </div>\n    )\n\nMovieThumb.proTypes = {\n    image: PropTypes.string,\n    movieId: PropTypes.number,\n    movieName: PropTypes.string,\n    clickable: PropTypes.bool\n}\n\nexport default MovieThumb;","import React from 'react';\nimport './LoadMoreBtn.css'\n\nconst LoadMoreBtn = ({ onClick, text }) => (\n        <div className=\"rmdb-loadmorebtn\" onClick={() => onClick(true)}>\n           <p>{text}</p>\n        </div>\n    )\n\n\nexport default LoadMoreBtn;","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => (\n        <div className=\"loader\">\n\n        </div>\n    )\n\n\nexport default Spinner","import { useState, useEffect } from 'react';\nimport { API_URL, API_KEY } from '../../config';\n\nexport const useFetchMovies = () => {\n\nconst [state, setState] = useState({ movies: [] });\nconst [isLoading, setIsLoading] = useState(false);\nconst [isError, setIsError] = useState(false);\n\nconst fetchMovies = async endpoint => {\n    setIsError(false);\n    setIsLoading(true);\n\n    const params = new URLSearchParams(endpoint);\n    if(!params.get('page')) {\n        setState(prev => ({\n            ...prev,\n            movies: [],\n            searchTerm: params.get('query')\n        }))\n    }\n\n    try {\n        const result = await (await fetch(endpoint)).json();\n        setState(prev => ({\n            ...prev,\n            movies: [...prev.movies, ...result.results],\n            heroImage: prev.heroImage || result.results[0],\n            currentPage: result.page,\n            totalPages: result.total_pages,\n        }))\n        }catch(error) {\n            setIsError(true)\n    }\n    setIsLoading(false);\n    };\n\n    useEffect(() => {\n        if (sessionStorage.getItem('HomeState')) {\n            const persistedState = JSON.parse(sessionStorage.getItem('HomeState'));\n            setState({ ...persistedState });\n        } else {\n            fetchMovies(`${API_URL}movie/popular?api_key=${API_KEY}`);\n        }\n    }, []);\n\n    useEffect(()=> {\n        if (!state.searchTerm) {\n            sessionStorage.setItem('HomeState', JSON.stringify(state));\n        }\n    },[ state]);\n\n    return [{state, isLoading, isError }, fetchMovies];\n}","import React from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE} from '../../config';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Home.css';\n\nimport { useFetchMovies } from './HomeHook';\n\nconst Home = () => {\n    const [{ state, isLoading,}, fetchMovies] = useFetchMovies();\n\n    const searchItems = searchTerm => {\n        let endpoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${searchTerm}`;\n        if (!searchTerm) {\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}`;\n        }\n        fetchMovies(endpoint);\n    };\n\n    const loadMoreItems = () => {\n        const { searchTerm, currentPage} = state;\n        let endpoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${searchTerm}&page=${currentPage + 1}`;\n        \n        if (!searchTerm) {\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&page=${currentPage + 1}`;\n        }\n       fetchMovies(endpoint);\n    };\n\n    return (\n            <div className=\"rmdb-home\">\n                {state.heroImage && !state.searchTerm ? (\n                    <div>\n                        <HeroImage \n                        image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.heroImage.backdrop_path}`}\n                        title={state.heroImage.original_title}\n                        text={state.heroImage.overview}\n                        />\n                        \n                    </div> \n                    ) : null }\n                    <SearchBar callback={searchItems} />\n                    <div className=\"rmdb-home-grid\">\n                    <FourColGrid\n                        header={state.searchTerm ? 'Search Results' : 'Popular Movies'}\n                        loading={isLoading}\n                        >\n                        {state.movies.map ( ( element, i) => (\n                             <MovieThumb\n                                key={i}\n                                clickable={true}\n                                image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}`: './images/no_image.jpg'}\n                                movieId={element.id}\n                                movieName={element.original_title}\n                                />\n                            ))}\n                    </FourColGrid>\n                    {isLoading ? <Spinner /> : null}\n                    {(state.currentPage <= state.totalPages && !isLoading) ?\n                        <LoadMoreBtn text=\"Load More\" onClick={loadMoreItems} />\n                        : null }\n                </div>\n            </div>\n    )\n\n}\n\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navigation.css'\n\nconst Navigation = ({ movie }) => (\n        <div className=\"rmdb-navigation\">\n            <div className=\"rmdb-navigation-content\">\n                <Link to=\"/\">\n                    <p>Home</p>\n                </Link>\n                <p>/</p>\n                <p>{movie}</p>\n            </div>\n        </div>\n    )\n\n\nexport default Navigation;","import React from 'react';\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE, } from '../../../config';\nimport FontAwesome from 'react-fontawesome';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './MovieInfo.css';\n\nconst MovieInfo = (props) => {\n    return (\n        <div className=\"rmdb-movieinfo\"\n            style={{\n                background: props.movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')` : '#000' \n            }}\n        >\n            <div className=\"rmdb-movieinfo-content\">\n                <div className=\"rmdb-movieinfo-thumb\">\n                    <MovieThumb\n                        image={props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}` : './images/no_image.jpg'}\n                        clickable={false}\n                    />\n                </div>\n                <div className=\"rmdb-movieinfo-text\">\n                    <h1>{props.movie.title}</h1>\n                    <h3>PLOT</h3>\n                    <p>{props.movie.overview}</p>\n                    <h3>IMDB RATING</h3>\n                    <div className=\"rmdb-rating\">\n                        <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_average * 10}>\n                        </meter>\n                        <p className=\"rmdb-score\">{props.movie.vote_average}</p>\n                    </div>\n                    {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\n                    {props.directors.map( (element, i ) => {\n                        return <p key={i} className=\"rmdb-director\">{element.name}</p>\n                    })}\n                </div>\n                <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\n            </div>\n        </div>\n    )\n}\n\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport { calcTime, convertMoney } from '../../../helpers.js';\nimport './MovieInfoBar.css';\n\nconst MovieInfoBar = ({ time, budget, revenue }) => (\n        <div className=\"rmdb-movieinfobar\">\n            <div className=\"rmdb-movieinfobar-content\">\n                <div className=\"rmdb-movieinfobar-content-col\">\n                    <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\n                    <span className=\"rmdb-movieinfobar-info\">Running time: {calcTime(time)}</span>\n                </div>\n                <div className=\"rmdb-movieinfobar-content-col\">\n                    <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\n                    <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(budget)}</span>\n                </div>\n                <div className=\"rmdb-movieinfobar-content-col\">\n                    <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\n                    <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(revenue)}</span>\n                </div>\n            </div>\n        </div>\n    )\n\n\nexport default MovieInfoBar;","import React from \"react\";\nimport { IMAGE_BASE_URL } from '../../../config';\nimport './Actor.css'\n\nconst Actor = (props) => {\n\n    const POSTER_SIZE = \"w154\"\n\n    return (\n        <div className=\"rmdb-actor\">\n            <img\n                src={props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}` : './images/no_image.jpg'}\n                alt=\"actorthumb\" \n            />\n            <span className=\"rmdb-actor-name\">{props.actor.name}</span>\n            <span className=\"rmdb-actor-character\">{props.actor.character}</span>\n        </div>\n    )\n}\n\nexport default Actor;","import React, { Component } from 'react';\nimport { API_URL, API_KEY } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\nclass Movie extends Component {\n  state = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false\n  }\n\n  componentDidMount() {\n      const { movieId } = this.props.match.params;\n\n    if (localStorage.getItem(`${movieId}`)) {\n      const state = JSON.parse(localStorage.getItem(`${movieId}`));\n      this.setState({ ...state });\n    } else {\n      this.setState({ loading: true })\n      // First fetch the movie ...\n      const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  fetchItems = async endpoint => {\n    const { movieId} = this.props.match.params;\n    try {\n        const result = await (await fetch(endpoint)).json();\n        if (result.status_code) {\n            this.setState({ loading: false });\n          } else {\n            this.setState({ movie: result }) \n              const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n              const creditsResult = await (await fetch(creditsEndpoint)).json();\n              const directors = creditsResult.crew.filter( (member) => member.job === \"Director\");\n                this.setState({\n                  actors: creditsResult.cast,\n                  directors,\n                  loading: false\n                }, () => {\n                  localStorage.setItem(`${movieId}`, JSON.stringify(this.state));\n                })\n            }\n    }\n    catch (e) {\n        console.log(\"There was an error: \", e)\n    }\n  }\n\n  render() {\n      const { movieName } = this.props.location;\n      const { movie, directors, actors, loading } = this.state;\n\n    return (\n      <div className=\"rmdb-movie\">\n        {movie ?\n          <div>\n            <Navigation movie={movieName} />\n            <MovieInfo movie={movie} directors={directors} />\n            <MovieInfoBar time={movie.runtime} budget={movie.budget} revenue={movie.revenue} />\n          </div>\n        : null }\n        {actors ?\n          <div className=\"rmdb-movie-grid\">\n            <FourColGrid header={'Actors'}>\n              {actors.map( (element, i) => {\n                return <Actor key={i} actor={element} />\n              })}\n            </FourColGrid >\n          </div>\n          : null }\n          {!actors && !loading ? <h1>No Movie Found!</h1> : null}\n          {loading ? <Spinner /> : null}\n      </div>\n    )\n  }\n}\n\nexport default Movie;","import React from 'react'\n\nconst NotFound = () => (\n        <div>\n            <h1>Whoooops. This page doesn't exist.</h1>\n        </div>\n    )\n\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Header from '../elements/Header/Header';\nimport Home from '../Home/Home';\nimport Movie from '../Movie/Movie'\nimport NotFound from '../elements/NotFound/NotFound';\n\n\nconst App = () => {\n    return (\n        <BrowserRouter basename=''> \n            <React.Fragment>\n                <Header />\n                <Switch>\n                    <Route path=\"/\" component={Home} exact />\n                    <Route path=\"/:movieId\" component={Movie} exact />\n                    <Route component={NotFound} />\n                </Switch>\n            </React.Fragment>\n        </BrowserRouter>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}